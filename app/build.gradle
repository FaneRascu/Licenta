apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    defaultConfig {
        applicationId "rascu.stefan.twitchanalysis"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    //Android Support Libraries
//    implementation 'com.android.support:appcompat-v7:27.1.1'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation 'com.android.support:cardview-v7:27.1.1'
//    implementation 'com.android.support:appcompat-v7:27.1.1'
//    implementation 'com.android.support:design:27.1.1'

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'

    //Moshi Library for JSON Parser
    implementation 'com.squareup.moshi:moshi:1.5.0'

    //PaperDB Library for Cache(Offline Library)
    implementation 'io.paperdb:paperdb:2.6'

    //Dagger Library for dependecy injection
    def daggerVersion = '2.14.1'
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    //Retrofit Library for network communications
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'

    //Picasso Library
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    //Butterknife Library
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //Unit tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "org.robolectric:robolectric:3.6.1"
    testImplementation 'com.google.dagger:dagger:2.0'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.0'
    testCompileOnly 'org.glassfish:javax.annotation:10.0-b28'

    configurations.all {
        resolutionStrategy.force "org.ow2.asm:asm:5.0.3"
    }
}
